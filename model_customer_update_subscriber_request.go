/*
CDP Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// checks if the CustomerUpdateSubscriberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerUpdateSubscriberRequest{}

// CustomerUpdateSubscriberRequest struct for CustomerUpdateSubscriberRequest
type CustomerUpdateSubscriberRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	Subscriber *CustomerSubscriberResponseWithNewsletterRequest `json:"subscriber,omitempty"`
	FieldMask *string `json:"fieldMask,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerUpdateSubscriberRequest CustomerUpdateSubscriberRequest

// NewCustomerUpdateSubscriberRequest instantiates a new CustomerUpdateSubscriberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerUpdateSubscriberRequest() *CustomerUpdateSubscriberRequest {
	this := CustomerUpdateSubscriberRequest{}
	return &this
}

// NewCustomerUpdateSubscriberRequestWithDefaults instantiates a new CustomerUpdateSubscriberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerUpdateSubscriberRequestWithDefaults() *CustomerUpdateSubscriberRequest {
	this := CustomerUpdateSubscriberRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CustomerUpdateSubscriberRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerUpdateSubscriberRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CustomerUpdateSubscriberRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CustomerUpdateSubscriberRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSubscriber returns the Subscriber field value if set, zero value otherwise.
func (o *CustomerUpdateSubscriberRequest) GetSubscriber() CustomerSubscriberResponseWithNewsletterRequest {
	if o == nil || IsNil(o.Subscriber) {
		var ret CustomerSubscriberResponseWithNewsletterRequest
		return ret
	}
	return *o.Subscriber
}

// GetSubscriberOk returns a tuple with the Subscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerUpdateSubscriberRequest) GetSubscriberOk() (*CustomerSubscriberResponseWithNewsletterRequest, bool) {
	if o == nil || IsNil(o.Subscriber) {
		return nil, false
	}
	return o.Subscriber, true
}

// HasSubscriber returns a boolean if a field has been set.
func (o *CustomerUpdateSubscriberRequest) HasSubscriber() bool {
	if o != nil && !IsNil(o.Subscriber) {
		return true
	}

	return false
}

// SetSubscriber gets a reference to the given CustomerSubscriberResponseWithNewsletterRequest and assigns it to the Subscriber field.
func (o *CustomerUpdateSubscriberRequest) SetSubscriber(v CustomerSubscriberResponseWithNewsletterRequest) {
	o.Subscriber = &v
}

// GetFieldMask returns the FieldMask field value if set, zero value otherwise.
func (o *CustomerUpdateSubscriberRequest) GetFieldMask() string {
	if o == nil || IsNil(o.FieldMask) {
		var ret string
		return ret
	}
	return *o.FieldMask
}

// GetFieldMaskOk returns a tuple with the FieldMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerUpdateSubscriberRequest) GetFieldMaskOk() (*string, bool) {
	if o == nil || IsNil(o.FieldMask) {
		return nil, false
	}
	return o.FieldMask, true
}

// HasFieldMask returns a boolean if a field has been set.
func (o *CustomerUpdateSubscriberRequest) HasFieldMask() bool {
	if o != nil && !IsNil(o.FieldMask) {
		return true
	}

	return false
}

// SetFieldMask gets a reference to the given string and assigns it to the FieldMask field.
func (o *CustomerUpdateSubscriberRequest) SetFieldMask(v string) {
	o.FieldMask = &v
}

func (o CustomerUpdateSubscriberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerUpdateSubscriberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Subscriber) {
		toSerialize["subscriber"] = o.Subscriber
	}
	if !IsNil(o.FieldMask) {
		toSerialize["fieldMask"] = o.FieldMask
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerUpdateSubscriberRequest) UnmarshalJSON(data []byte) (err error) {
	varCustomerUpdateSubscriberRequest := _CustomerUpdateSubscriberRequest{}

	err = json.Unmarshal(data, &varCustomerUpdateSubscriberRequest)

	if err != nil {
		return err
	}

	*o = CustomerUpdateSubscriberRequest(varCustomerUpdateSubscriberRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "subscriber")
		delete(additionalProperties, "fieldMask")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerUpdateSubscriberRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *CustomerUpdateSubscriberRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableCustomerUpdateSubscriberRequest struct {
	value *CustomerUpdateSubscriberRequest
	isSet bool
}

func (v NullableCustomerUpdateSubscriberRequest) Get() *CustomerUpdateSubscriberRequest {
	return v.value
}

func (v *NullableCustomerUpdateSubscriberRequest) Set(val *CustomerUpdateSubscriberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerUpdateSubscriberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerUpdateSubscriberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerUpdateSubscriberRequest(val *CustomerUpdateSubscriberRequest) *NullableCustomerUpdateSubscriberRequest {
	return &NullableCustomerUpdateSubscriberRequest{value: val, isSet: true}
}

func (v NullableCustomerUpdateSubscriberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerUpdateSubscriberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


