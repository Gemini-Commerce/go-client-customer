/*
customer/customer.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// CustomerAddressDeleteResponse struct for CustomerAddressDeleteResponse
type CustomerAddressDeleteResponse struct {
	Customer *CustomerCustomerResponse `json:"customer,omitempty"`
}

// NewCustomerAddressDeleteResponse instantiates a new CustomerAddressDeleteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerAddressDeleteResponse() *CustomerAddressDeleteResponse {
	this := CustomerAddressDeleteResponse{}
	return &this
}

// NewCustomerAddressDeleteResponseWithDefaults instantiates a new CustomerAddressDeleteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerAddressDeleteResponseWithDefaults() *CustomerAddressDeleteResponse {
	this := CustomerAddressDeleteResponse{}
	return &this
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *CustomerAddressDeleteResponse) GetCustomer() CustomerCustomerResponse {
	if o == nil || isNil(o.Customer) {
		var ret CustomerCustomerResponse
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressDeleteResponse) GetCustomerOk() (*CustomerCustomerResponse, bool) {
	if o == nil || isNil(o.Customer) {
    return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *CustomerAddressDeleteResponse) HasCustomer() bool {
	if o != nil && !isNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CustomerCustomerResponse and assigns it to the Customer field.
func (o *CustomerAddressDeleteResponse) SetCustomer(v CustomerCustomerResponse) {
	o.Customer = &v
}

func (o CustomerAddressDeleteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerAddressDeleteResponse struct {
	value *CustomerAddressDeleteResponse
	isSet bool
}

func (v NullableCustomerAddressDeleteResponse) Get() *CustomerAddressDeleteResponse {
	return v.value
}

func (v *NullableCustomerAddressDeleteResponse) Set(val *CustomerAddressDeleteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerAddressDeleteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerAddressDeleteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerAddressDeleteResponse(val *CustomerAddressDeleteResponse) *NullableCustomerAddressDeleteResponse {
	return &NullableCustomerAddressDeleteResponse{value: val, isSet: true}
}

func (v NullableCustomerAddressDeleteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerAddressDeleteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


