/*
CDP Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// CustomerListGroupsResponse struct for CustomerListGroupsResponse
type CustomerListGroupsResponse struct {
	Groups []CustomerGroupResponse `json:"groups,omitempty"`
}

// NewCustomerListGroupsResponse instantiates a new CustomerListGroupsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerListGroupsResponse() *CustomerListGroupsResponse {
	this := CustomerListGroupsResponse{}
	return &this
}

// NewCustomerListGroupsResponseWithDefaults instantiates a new CustomerListGroupsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerListGroupsResponseWithDefaults() *CustomerListGroupsResponse {
	this := CustomerListGroupsResponse{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *CustomerListGroupsResponse) GetGroups() []CustomerGroupResponse {
	if o == nil || isNil(o.Groups) {
		var ret []CustomerGroupResponse
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListGroupsResponse) GetGroupsOk() ([]CustomerGroupResponse, bool) {
	if o == nil || isNil(o.Groups) {
    return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *CustomerListGroupsResponse) HasGroups() bool {
	if o != nil && !isNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []CustomerGroupResponse and assigns it to the Groups field.
func (o *CustomerListGroupsResponse) SetGroups(v []CustomerGroupResponse) {
	o.Groups = v
}

func (o CustomerListGroupsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerListGroupsResponse struct {
	value *CustomerListGroupsResponse
	isSet bool
}

func (v NullableCustomerListGroupsResponse) Get() *CustomerListGroupsResponse {
	return v.value
}

func (v *NullableCustomerListGroupsResponse) Set(val *CustomerListGroupsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerListGroupsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerListGroupsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerListGroupsResponse(val *CustomerListGroupsResponse) *NullableCustomerListGroupsResponse {
	return &NullableCustomerListGroupsResponse{value: val, isSet: true}
}

func (v NullableCustomerListGroupsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerListGroupsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


