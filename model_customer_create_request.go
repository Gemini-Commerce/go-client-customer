/*
customer/customer.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CustomerCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerCreateRequest{}

// CustomerCreateRequest struct for CustomerCreateRequest
type CustomerCreateRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	Em *CustomerEMFields `json:"em,omitempty"`
	Name *string `json:"name,omitempty"`
	Surname *string `json:"surname,omitempty"`
	Email *string `json:"email,omitempty"`
	Birthdate *time.Time `json:"birthdate,omitempty"`
	Gender *string `json:"gender,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Source *string `json:"source,omitempty"`
	Addresses []CustomerAddressEntity `json:"addresses,omitempty"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	Nationality *string `json:"nationality,omitempty"`
	Groups []string `json:"groups,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	Newsletters []CustomerNewsletterRequest `json:"newsletters,omitempty"`
	DoNotNotify *bool `json:"doNotNotify,omitempty"`
	Attributes *map[string]ProtobufAny `json:"attributes,omitempty"`
	MigratedPassword *CustomerPassword `json:"migratedPassword,omitempty"`
	Market *string `json:"market,omitempty"`
	PreferredLocale *string `json:"preferredLocale,omitempty"`
	TaxCode *string `json:"taxCode,omitempty"`
	CertifiedEmail *string `json:"certifiedEmail,omitempty"`
}

// NewCustomerCreateRequest instantiates a new CustomerCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerCreateRequest() *CustomerCreateRequest {
	this := CustomerCreateRequest{}
	return &this
}

// NewCustomerCreateRequestWithDefaults instantiates a new CustomerCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerCreateRequestWithDefaults() *CustomerCreateRequest {
	this := CustomerCreateRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CustomerCreateRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetEm returns the Em field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetEm() CustomerEMFields {
	if o == nil || IsNil(o.Em) {
		var ret CustomerEMFields
		return ret
	}
	return *o.Em
}

// GetEmOk returns a tuple with the Em field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetEmOk() (*CustomerEMFields, bool) {
	if o == nil || IsNil(o.Em) {
		return nil, false
	}
	return o.Em, true
}

// HasEm returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasEm() bool {
	if o != nil && !IsNil(o.Em) {
		return true
	}

	return false
}

// SetEm gets a reference to the given CustomerEMFields and assigns it to the Em field.
func (o *CustomerCreateRequest) SetEm(v CustomerEMFields) {
	o.Em = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomerCreateRequest) SetName(v string) {
	o.Name = &v
}

// GetSurname returns the Surname field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetSurname() string {
	if o == nil || IsNil(o.Surname) {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasSurname() bool {
	if o != nil && !IsNil(o.Surname) {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *CustomerCreateRequest) SetSurname(v string) {
	o.Surname = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CustomerCreateRequest) SetEmail(v string) {
	o.Email = &v
}

// GetBirthdate returns the Birthdate field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetBirthdate() time.Time {
	if o == nil || IsNil(o.Birthdate) {
		var ret time.Time
		return ret
	}
	return *o.Birthdate
}

// GetBirthdateOk returns a tuple with the Birthdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetBirthdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Birthdate) {
		return nil, false
	}
	return o.Birthdate, true
}

// HasBirthdate returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasBirthdate() bool {
	if o != nil && !IsNil(o.Birthdate) {
		return true
	}

	return false
}

// SetBirthdate gets a reference to the given time.Time and assigns it to the Birthdate field.
func (o *CustomerCreateRequest) SetBirthdate(v time.Time) {
	o.Birthdate = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *CustomerCreateRequest) SetGender(v string) {
	o.Gender = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CustomerCreateRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *CustomerCreateRequest) SetSource(v string) {
	o.Source = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetAddresses() []CustomerAddressEntity {
	if o == nil || IsNil(o.Addresses) {
		var ret []CustomerAddressEntity
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetAddressesOk() ([]CustomerAddressEntity, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []CustomerAddressEntity and assigns it to the Addresses field.
func (o *CustomerCreateRequest) SetAddresses(v []CustomerAddressEntity) {
	o.Addresses = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CustomerCreateRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetNationality() string {
	if o == nil || IsNil(o.Nationality) {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetNationalityOk() (*string, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasNationality() bool {
	if o != nil && !IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *CustomerCreateRequest) SetNationality(v string) {
	o.Nationality = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetGroups() []string {
	if o == nil || IsNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *CustomerCreateRequest) SetGroups(v []string) {
	o.Groups = v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *CustomerCreateRequest) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetNewsletters returns the Newsletters field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetNewsletters() []CustomerNewsletterRequest {
	if o == nil || IsNil(o.Newsletters) {
		var ret []CustomerNewsletterRequest
		return ret
	}
	return o.Newsletters
}

// GetNewslettersOk returns a tuple with the Newsletters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetNewslettersOk() ([]CustomerNewsletterRequest, bool) {
	if o == nil || IsNil(o.Newsletters) {
		return nil, false
	}
	return o.Newsletters, true
}

// HasNewsletters returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasNewsletters() bool {
	if o != nil && !IsNil(o.Newsletters) {
		return true
	}

	return false
}

// SetNewsletters gets a reference to the given []CustomerNewsletterRequest and assigns it to the Newsletters field.
func (o *CustomerCreateRequest) SetNewsletters(v []CustomerNewsletterRequest) {
	o.Newsletters = v
}

// GetDoNotNotify returns the DoNotNotify field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetDoNotNotify() bool {
	if o == nil || IsNil(o.DoNotNotify) {
		var ret bool
		return ret
	}
	return *o.DoNotNotify
}

// GetDoNotNotifyOk returns a tuple with the DoNotNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetDoNotNotifyOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotNotify) {
		return nil, false
	}
	return o.DoNotNotify, true
}

// HasDoNotNotify returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasDoNotNotify() bool {
	if o != nil && !IsNil(o.DoNotNotify) {
		return true
	}

	return false
}

// SetDoNotNotify gets a reference to the given bool and assigns it to the DoNotNotify field.
func (o *CustomerCreateRequest) SetDoNotNotify(v bool) {
	o.DoNotNotify = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetAttributes() map[string]ProtobufAny {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]ProtobufAny
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetAttributesOk() (*map[string]ProtobufAny, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]ProtobufAny and assigns it to the Attributes field.
func (o *CustomerCreateRequest) SetAttributes(v map[string]ProtobufAny) {
	o.Attributes = &v
}

// GetMigratedPassword returns the MigratedPassword field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetMigratedPassword() CustomerPassword {
	if o == nil || IsNil(o.MigratedPassword) {
		var ret CustomerPassword
		return ret
	}
	return *o.MigratedPassword
}

// GetMigratedPasswordOk returns a tuple with the MigratedPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetMigratedPasswordOk() (*CustomerPassword, bool) {
	if o == nil || IsNil(o.MigratedPassword) {
		return nil, false
	}
	return o.MigratedPassword, true
}

// HasMigratedPassword returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasMigratedPassword() bool {
	if o != nil && !IsNil(o.MigratedPassword) {
		return true
	}

	return false
}

// SetMigratedPassword gets a reference to the given CustomerPassword and assigns it to the MigratedPassword field.
func (o *CustomerCreateRequest) SetMigratedPassword(v CustomerPassword) {
	o.MigratedPassword = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetMarket() string {
	if o == nil || IsNil(o.Market) {
		var ret string
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetMarketOk() (*string, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given string and assigns it to the Market field.
func (o *CustomerCreateRequest) SetMarket(v string) {
	o.Market = &v
}

// GetPreferredLocale returns the PreferredLocale field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetPreferredLocale() string {
	if o == nil || IsNil(o.PreferredLocale) {
		var ret string
		return ret
	}
	return *o.PreferredLocale
}

// GetPreferredLocaleOk returns a tuple with the PreferredLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetPreferredLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredLocale) {
		return nil, false
	}
	return o.PreferredLocale, true
}

// HasPreferredLocale returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasPreferredLocale() bool {
	if o != nil && !IsNil(o.PreferredLocale) {
		return true
	}

	return false
}

// SetPreferredLocale gets a reference to the given string and assigns it to the PreferredLocale field.
func (o *CustomerCreateRequest) SetPreferredLocale(v string) {
	o.PreferredLocale = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *CustomerCreateRequest) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetCertifiedEmail returns the CertifiedEmail field value if set, zero value otherwise.
func (o *CustomerCreateRequest) GetCertifiedEmail() string {
	if o == nil || IsNil(o.CertifiedEmail) {
		var ret string
		return ret
	}
	return *o.CertifiedEmail
}

// GetCertifiedEmailOk returns a tuple with the CertifiedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerCreateRequest) GetCertifiedEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CertifiedEmail) {
		return nil, false
	}
	return o.CertifiedEmail, true
}

// HasCertifiedEmail returns a boolean if a field has been set.
func (o *CustomerCreateRequest) HasCertifiedEmail() bool {
	if o != nil && !IsNil(o.CertifiedEmail) {
		return true
	}

	return false
}

// SetCertifiedEmail gets a reference to the given string and assigns it to the CertifiedEmail field.
func (o *CustomerCreateRequest) SetCertifiedEmail(v string) {
	o.CertifiedEmail = &v
}

func (o CustomerCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Em) {
		toSerialize["em"] = o.Em
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Surname) {
		toSerialize["surname"] = o.Surname
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Birthdate) {
		toSerialize["birthdate"] = o.Birthdate
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Nationality) {
		toSerialize["nationality"] = o.Nationality
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Newsletters) {
		toSerialize["newsletters"] = o.Newsletters
	}
	if !IsNil(o.DoNotNotify) {
		toSerialize["doNotNotify"] = o.DoNotNotify
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.MigratedPassword) {
		toSerialize["migratedPassword"] = o.MigratedPassword
	}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.PreferredLocale) {
		toSerialize["preferredLocale"] = o.PreferredLocale
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.CertifiedEmail) {
		toSerialize["certifiedEmail"] = o.CertifiedEmail
	}
	return toSerialize, nil
}

type NullableCustomerCreateRequest struct {
	value *CustomerCreateRequest
	isSet bool
}

func (v NullableCustomerCreateRequest) Get() *CustomerCreateRequest {
	return v.value
}

func (v *NullableCustomerCreateRequest) Set(val *CustomerCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerCreateRequest(val *CustomerCreateRequest) *NullableCustomerCreateRequest {
	return &NullableCustomerCreateRequest{value: val, isSet: true}
}

func (v NullableCustomerCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


