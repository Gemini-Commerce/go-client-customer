/*
CDP Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// CustomerDeleteGroupResponse struct for CustomerDeleteGroupResponse
type CustomerDeleteGroupResponse struct {
	GroupId *string `json:"groupId,omitempty"`
}

// NewCustomerDeleteGroupResponse instantiates a new CustomerDeleteGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDeleteGroupResponse() *CustomerDeleteGroupResponse {
	this := CustomerDeleteGroupResponse{}
	return &this
}

// NewCustomerDeleteGroupResponseWithDefaults instantiates a new CustomerDeleteGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDeleteGroupResponseWithDefaults() *CustomerDeleteGroupResponse {
	this := CustomerDeleteGroupResponse{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *CustomerDeleteGroupResponse) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDeleteGroupResponse) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
    return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *CustomerDeleteGroupResponse) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *CustomerDeleteGroupResponse) SetGroupId(v string) {
	o.GroupId = &v
}

func (o CustomerDeleteGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerDeleteGroupResponse struct {
	value *CustomerDeleteGroupResponse
	isSet bool
}

func (v NullableCustomerDeleteGroupResponse) Get() *CustomerDeleteGroupResponse {
	return v.value
}

func (v *NullableCustomerDeleteGroupResponse) Set(val *CustomerDeleteGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDeleteGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDeleteGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDeleteGroupResponse(val *CustomerDeleteGroupResponse) *NullableCustomerDeleteGroupResponse {
	return &NullableCustomerDeleteGroupResponse{value: val, isSet: true}
}

func (v NullableCustomerDeleteGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDeleteGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


