/*
customer/customer.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CustomerAddressUpdateResponse struct for CustomerAddressUpdateResponse
type CustomerAddressUpdateResponse struct {
	Customer *CustomerCustomerResponse `json:"customer,omitempty"`
}

// NewCustomerAddressUpdateResponse instantiates a new CustomerAddressUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerAddressUpdateResponse() *CustomerAddressUpdateResponse {
	this := CustomerAddressUpdateResponse{}
	return &this
}

// NewCustomerAddressUpdateResponseWithDefaults instantiates a new CustomerAddressUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerAddressUpdateResponseWithDefaults() *CustomerAddressUpdateResponse {
	this := CustomerAddressUpdateResponse{}
	return &this
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *CustomerAddressUpdateResponse) GetCustomer() CustomerCustomerResponse {
	if o == nil || isNil(o.Customer) {
		var ret CustomerCustomerResponse
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerAddressUpdateResponse) GetCustomerOk() (*CustomerCustomerResponse, bool) {
	if o == nil || isNil(o.Customer) {
    return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *CustomerAddressUpdateResponse) HasCustomer() bool {
	if o != nil && !isNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CustomerCustomerResponse and assigns it to the Customer field.
func (o *CustomerAddressUpdateResponse) SetCustomer(v CustomerCustomerResponse) {
	o.Customer = &v
}

func (o CustomerAddressUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerAddressUpdateResponse struct {
	value *CustomerAddressUpdateResponse
	isSet bool
}

func (v NullableCustomerAddressUpdateResponse) Get() *CustomerAddressUpdateResponse {
	return v.value
}

func (v *NullableCustomerAddressUpdateResponse) Set(val *CustomerAddressUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerAddressUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerAddressUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerAddressUpdateResponse(val *CustomerAddressUpdateResponse) *NullableCustomerAddressUpdateResponse {
	return &NullableCustomerAddressUpdateResponse{value: val, isSet: true}
}

func (v NullableCustomerAddressUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerAddressUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


