/*
CDP Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// checks if the CustomerListCustomersRequestFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerListCustomersRequestFilter{}

// CustomerListCustomersRequestFilter struct for CustomerListCustomersRequestFilter
type CustomerListCustomersRequestFilter struct {
	Genders []string `json:"genders,omitempty"`
	CreatedAt []ListCustomersRequestFilterDate `json:"createdAt,omitempty"`
	Countries []string `json:"countries,omitempty"`
	AgentGrn *string `json:"agentGrn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerListCustomersRequestFilter CustomerListCustomersRequestFilter

// NewCustomerListCustomersRequestFilter instantiates a new CustomerListCustomersRequestFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerListCustomersRequestFilter() *CustomerListCustomersRequestFilter {
	this := CustomerListCustomersRequestFilter{}
	return &this
}

// NewCustomerListCustomersRequestFilterWithDefaults instantiates a new CustomerListCustomersRequestFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerListCustomersRequestFilterWithDefaults() *CustomerListCustomersRequestFilter {
	this := CustomerListCustomersRequestFilter{}
	return &this
}

// GetGenders returns the Genders field value if set, zero value otherwise.
func (o *CustomerListCustomersRequestFilter) GetGenders() []string {
	if o == nil || IsNil(o.Genders) {
		var ret []string
		return ret
	}
	return o.Genders
}

// GetGendersOk returns a tuple with the Genders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListCustomersRequestFilter) GetGendersOk() ([]string, bool) {
	if o == nil || IsNil(o.Genders) {
		return nil, false
	}
	return o.Genders, true
}

// HasGenders returns a boolean if a field has been set.
func (o *CustomerListCustomersRequestFilter) HasGenders() bool {
	if o != nil && !IsNil(o.Genders) {
		return true
	}

	return false
}

// SetGenders gets a reference to the given []string and assigns it to the Genders field.
func (o *CustomerListCustomersRequestFilter) SetGenders(v []string) {
	o.Genders = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CustomerListCustomersRequestFilter) GetCreatedAt() []ListCustomersRequestFilterDate {
	if o == nil || IsNil(o.CreatedAt) {
		var ret []ListCustomersRequestFilterDate
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListCustomersRequestFilter) GetCreatedAtOk() ([]ListCustomersRequestFilterDate, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CustomerListCustomersRequestFilter) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given []ListCustomersRequestFilterDate and assigns it to the CreatedAt field.
func (o *CustomerListCustomersRequestFilter) SetCreatedAt(v []ListCustomersRequestFilterDate) {
	o.CreatedAt = v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *CustomerListCustomersRequestFilter) GetCountries() []string {
	if o == nil || IsNil(o.Countries) {
		var ret []string
		return ret
	}
	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListCustomersRequestFilter) GetCountriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Countries) {
		return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *CustomerListCustomersRequestFilter) HasCountries() bool {
	if o != nil && !IsNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given []string and assigns it to the Countries field.
func (o *CustomerListCustomersRequestFilter) SetCountries(v []string) {
	o.Countries = v
}

// GetAgentGrn returns the AgentGrn field value if set, zero value otherwise.
func (o *CustomerListCustomersRequestFilter) GetAgentGrn() string {
	if o == nil || IsNil(o.AgentGrn) {
		var ret string
		return ret
	}
	return *o.AgentGrn
}

// GetAgentGrnOk returns a tuple with the AgentGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListCustomersRequestFilter) GetAgentGrnOk() (*string, bool) {
	if o == nil || IsNil(o.AgentGrn) {
		return nil, false
	}
	return o.AgentGrn, true
}

// HasAgentGrn returns a boolean if a field has been set.
func (o *CustomerListCustomersRequestFilter) HasAgentGrn() bool {
	if o != nil && !IsNil(o.AgentGrn) {
		return true
	}

	return false
}

// SetAgentGrn gets a reference to the given string and assigns it to the AgentGrn field.
func (o *CustomerListCustomersRequestFilter) SetAgentGrn(v string) {
	o.AgentGrn = &v
}

func (o CustomerListCustomersRequestFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerListCustomersRequestFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Genders) {
		toSerialize["genders"] = o.Genders
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Countries) {
		toSerialize["countries"] = o.Countries
	}
	if !IsNil(o.AgentGrn) {
		toSerialize["agentGrn"] = o.AgentGrn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerListCustomersRequestFilter) UnmarshalJSON(data []byte) (err error) {
	varCustomerListCustomersRequestFilter := _CustomerListCustomersRequestFilter{}

	err = json.Unmarshal(data, &varCustomerListCustomersRequestFilter)

	if err != nil {
		return err
	}

	*o = CustomerListCustomersRequestFilter(varCustomerListCustomersRequestFilter)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "genders")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "countries")
		delete(additionalProperties, "agentGrn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerListCustomersRequestFilter) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *CustomerListCustomersRequestFilter) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableCustomerListCustomersRequestFilter struct {
	value *CustomerListCustomersRequestFilter
	isSet bool
}

func (v NullableCustomerListCustomersRequestFilter) Get() *CustomerListCustomersRequestFilter {
	return v.value
}

func (v *NullableCustomerListCustomersRequestFilter) Set(val *CustomerListCustomersRequestFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerListCustomersRequestFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerListCustomersRequestFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerListCustomersRequestFilter(val *CustomerListCustomersRequestFilter) *NullableCustomerListCustomersRequestFilter {
	return &NullableCustomerListCustomersRequestFilter{value: val, isSet: true}
}

func (v NullableCustomerListCustomersRequestFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerListCustomersRequestFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


