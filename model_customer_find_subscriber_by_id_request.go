/*
CDP Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// checks if the CustomerFindSubscriberByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerFindSubscriberByIdRequest{}

// CustomerFindSubscriberByIdRequest struct for CustomerFindSubscriberByIdRequest
type CustomerFindSubscriberByIdRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	SubscriberId *string `json:"subscriberId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerFindSubscriberByIdRequest CustomerFindSubscriberByIdRequest

// NewCustomerFindSubscriberByIdRequest instantiates a new CustomerFindSubscriberByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerFindSubscriberByIdRequest() *CustomerFindSubscriberByIdRequest {
	this := CustomerFindSubscriberByIdRequest{}
	return &this
}

// NewCustomerFindSubscriberByIdRequestWithDefaults instantiates a new CustomerFindSubscriberByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerFindSubscriberByIdRequestWithDefaults() *CustomerFindSubscriberByIdRequest {
	this := CustomerFindSubscriberByIdRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CustomerFindSubscriberByIdRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFindSubscriberByIdRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CustomerFindSubscriberByIdRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CustomerFindSubscriberByIdRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSubscriberId returns the SubscriberId field value if set, zero value otherwise.
func (o *CustomerFindSubscriberByIdRequest) GetSubscriberId() string {
	if o == nil || IsNil(o.SubscriberId) {
		var ret string
		return ret
	}
	return *o.SubscriberId
}

// GetSubscriberIdOk returns a tuple with the SubscriberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFindSubscriberByIdRequest) GetSubscriberIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriberId) {
		return nil, false
	}
	return o.SubscriberId, true
}

// HasSubscriberId returns a boolean if a field has been set.
func (o *CustomerFindSubscriberByIdRequest) HasSubscriberId() bool {
	if o != nil && !IsNil(o.SubscriberId) {
		return true
	}

	return false
}

// SetSubscriberId gets a reference to the given string and assigns it to the SubscriberId field.
func (o *CustomerFindSubscriberByIdRequest) SetSubscriberId(v string) {
	o.SubscriberId = &v
}

func (o CustomerFindSubscriberByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerFindSubscriberByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.SubscriberId) {
		toSerialize["subscriberId"] = o.SubscriberId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerFindSubscriberByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varCustomerFindSubscriberByIdRequest := _CustomerFindSubscriberByIdRequest{}

	err = json.Unmarshal(data, &varCustomerFindSubscriberByIdRequest)

	if err != nil {
		return err
	}

	*o = CustomerFindSubscriberByIdRequest(varCustomerFindSubscriberByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "subscriberId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerFindSubscriberByIdRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *CustomerFindSubscriberByIdRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableCustomerFindSubscriberByIdRequest struct {
	value *CustomerFindSubscriberByIdRequest
	isSet bool
}

func (v NullableCustomerFindSubscriberByIdRequest) Get() *CustomerFindSubscriberByIdRequest {
	return v.value
}

func (v *NullableCustomerFindSubscriberByIdRequest) Set(val *CustomerFindSubscriberByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerFindSubscriberByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerFindSubscriberByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerFindSubscriberByIdRequest(val *CustomerFindSubscriberByIdRequest) *NullableCustomerFindSubscriberByIdRequest {
	return &NullableCustomerFindSubscriberByIdRequest{value: val, isSet: true}
}

func (v NullableCustomerFindSubscriberByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerFindSubscriberByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


