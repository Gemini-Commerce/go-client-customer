/*
CDP Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer

import (
	"encoding/json"
)

// checks if the CustomerListGroupsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerListGroupsRequest{}

// CustomerListGroupsRequest struct for CustomerListGroupsRequest
type CustomerListGroupsRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	PageSize *int64 `json:"pageSize,omitempty"`
	PageToken *string `json:"pageToken,omitempty"`
	Filter *CustomerListGroupsRequestFilter `json:"filter,omitempty"`
	FiltersMask *string `json:"filtersMask,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerListGroupsRequest CustomerListGroupsRequest

// NewCustomerListGroupsRequest instantiates a new CustomerListGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerListGroupsRequest() *CustomerListGroupsRequest {
	this := CustomerListGroupsRequest{}
	return &this
}

// NewCustomerListGroupsRequestWithDefaults instantiates a new CustomerListGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerListGroupsRequestWithDefaults() *CustomerListGroupsRequest {
	this := CustomerListGroupsRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CustomerListGroupsRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListGroupsRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// &#39;Has&#39;TenantId returns a boolean if a field has been set.
func (o *CustomerListGroupsRequest) &#39;Has&#39;TenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CustomerListGroupsRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *CustomerListGroupsRequest) GetPageSize() int64 {
	if o == nil || IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListGroupsRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// &#39;Has&#39;PageSize returns a boolean if a field has been set.
func (o *CustomerListGroupsRequest) &#39;Has&#39;PageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *CustomerListGroupsRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *CustomerListGroupsRequest) GetPageToken() string {
	if o == nil || IsNil(o.PageToken) {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListGroupsRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PageToken) {
		return nil, false
	}
	return o.PageToken, true
}

// &#39;Has&#39;PageToken returns a boolean if a field has been set.
func (o *CustomerListGroupsRequest) &#39;Has&#39;PageToken() bool {
	if o != nil && !IsNil(o.PageToken) {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *CustomerListGroupsRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *CustomerListGroupsRequest) GetFilter() CustomerListGroupsRequestFilter {
	if o == nil || IsNil(o.Filter) {
		var ret CustomerListGroupsRequestFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListGroupsRequest) GetFilterOk() (*CustomerListGroupsRequestFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// &#39;Has&#39;Filter returns a boolean if a field has been set.
func (o *CustomerListGroupsRequest) &#39;Has&#39;Filter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given CustomerListGroupsRequestFilter and assigns it to the Filter field.
func (o *CustomerListGroupsRequest) SetFilter(v CustomerListGroupsRequestFilter) {
	o.Filter = &v
}

// GetFiltersMask returns the FiltersMask field value if set, zero value otherwise.
func (o *CustomerListGroupsRequest) GetFiltersMask() string {
	if o == nil || IsNil(o.FiltersMask) {
		var ret string
		return ret
	}
	return *o.FiltersMask
}

// GetFiltersMaskOk returns a tuple with the FiltersMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListGroupsRequest) GetFiltersMaskOk() (*string, bool) {
	if o == nil || IsNil(o.FiltersMask) {
		return nil, false
	}
	return o.FiltersMask, true
}

// &#39;Has&#39;FiltersMask returns a boolean if a field has been set.
func (o *CustomerListGroupsRequest) &#39;Has&#39;FiltersMask() bool {
	if o != nil && !IsNil(o.FiltersMask) {
		return true
	}

	return false
}

// SetFiltersMask gets a reference to the given string and assigns it to the FiltersMask field.
func (o *CustomerListGroupsRequest) SetFiltersMask(v string) {
	o.FiltersMask = &v
}

func (o CustomerListGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerListGroupsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.PageToken) {
		toSerialize["pageToken"] = o.PageToken
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.FiltersMask) {
		toSerialize["filtersMask"] = o.FiltersMask
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerListGroupsRequest) UnmarshalJSON(data []byte) (err error) {
	varCustomerListGroupsRequest := _CustomerListGroupsRequest{}

	err = json.Unmarshal(data, &varCustomerListGroupsRequest)

	if err != nil {
		return err
	}

	*o = CustomerListGroupsRequest(varCustomerListGroupsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "pageToken")
		delete(additionalProperties, "filter")
		delete(additionalProperties, "filtersMask")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerListGroupsRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *CustomerListGroupsRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableCustomerListGroupsRequest struct {
	value *CustomerListGroupsRequest
	isSet bool
}

func (v NullableCustomerListGroupsRequest) Get() *CustomerListGroupsRequest {
	return v.value
}

func (v *NullableCustomerListGroupsRequest) Set(val *CustomerListGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerListGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerListGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerListGroupsRequest(val *CustomerListGroupsRequest) *NullableCustomerListGroupsRequest {
	return &NullableCustomerListGroupsRequest{value: val, isSet: true}
}

func (v NullableCustomerListGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerListGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


